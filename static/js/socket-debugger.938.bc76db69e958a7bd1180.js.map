{"version":3,"sources":["webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/index.scss?a939","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Handler/index.scss?79f0","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Handler/Type.tsx","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Handler/DataFormat.tsx","webpack://scott-personal-site/./src/Services/Websocket/SocketIO.ts","webpack://scott-personal-site/./src/Services/Websocket/Websocket.ts","webpack://scott-personal-site/./src/Services/Websocket/index.ts","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Handler/Connect.tsx","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Handler/Send.tsx","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Handler/index.tsx","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Browse/Message.tsx","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Browse/index.scss?8dae","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/Browse/index.tsx","webpack://scott-personal-site/./src/Containers/Views/SocketDebugger/index.tsx","webpack://scott-personal-site/./node_modules/moment/locale|sync|/[/](es-us(/.js)"],"names":["observer","socketStore","useRootStore","onChange","e","value","target","setSocketType","localStorage","setItem","LOCALSTORAGE_KEYS","socketType","disabled","socketIsConnected","SOCKER_TYPES","s","key","dataFormat","style","width","val","setDataFormat","DATA_FORMATS","d","patch","socketioWildcard","io","socketInstance","socket","send","event","data","retry","this","connected","emit","setTimeout","open","url","transports","unshift","reconnectionDelay","reconnection","reconnectionAttempts","reaction","_","__","r","close","dispose","on","attemptNumber","text","from","reason","timeout","err","console","warn","pkg","log","Array","length","reopenTimer","disconnectInitiative","Socket","EventEmitter","constructor","super","onopen","onmessage","conn","run","msg","JSON","stringify","readyState","OPEN","WebSocket","onclose","evt","code","clearTimeout","window","onerror","socketDisconnect","message","sendFromSocketIO","sendFromWebsocket","React","getItem","setUrl","className","isSocketIO","checked","notSupportPolling","setNotSupportPolling","styles","type","onClick","socketConnectFromSocketIO","socketConnectFromWebsocket","socketConnect","clearMessages","danger","localSocketIOEvents","initialSocketIOEvents","parse","slice","content","setContent","textContent","setTextContent","jsonContent","setJsonContent","socketIOEvent","setSocketIOEvent","socketIOEvents","setSocketIOEvents","modalVisible","setModalVisible","canSend","sendingContent","toggleModalVisible","visible","options","placeholder","filterOption","inputValue","option","toUpperCase","includes","placement","title","onConfirm","top","onOk","error","onCancel","autoSize","minRows","maxRows","name","theme","padding","minHeight","maxHeight","overflow","borderRadius","wordWrap","wordBreak","onAdd","uSrc","updated_src","onEdit","onDelete","src","block","size","some","newSocketIOEvents","time","moment","format","color","fromText","marginBottom","vList","measureCache","CellMeasurerCache","fixedWidth","handleMessagesChanged","len","clearAll","current","scrollToRow","renderItem","index","parent","item","messages","CellMeasurer","cache","columnIndex","rowIndex","useOnMount","rowCount","AutoSizer","height","ref","overscanRowCount","deferredMeasurementCache","rowHeight","rowRenderer","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/socket-debugger.938.bc76db69e958a7bd1180.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container--3Z1EbVbj\"};","// extracted by mini-css-extract-plugin\nexport default {\"handler\":\"handler--z7fStF0w\",\"head\":\"head--2B2TTXrm\",\"reset\":\"reset--1hEOQIHd\",\"autoComplete\":\"autoComplete--ctvLgv8P\",\"btnCover\":\"btnCover--3mh92_3_\",\"content\":\"content--WQkgsySu\",\"textContent\":\"textContent--3GUwnk55\",\"container\":\"container--8ttYB96p\",\"socketUrlInput\":\"socketUrlInput--Y1zVmx3c\",\"connect\":\"connect--308GOQeG\",\"btn\":\"btn--2mSXWo7t\",\"checkbox\":\"checkbox---n4TEi7I btn--2mSXWo7t\",\"tips\":\"tips--b5EcDgH_\"};","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Radio } from \"antd\";\nimport { RadioChangeEvent } from \"antd/lib/radio\";\n\nimport useRootStore from \"@Store/UseRootStore\";\nimport { LOCALSTORAGE_KEYS } from \"@Constants/index\";\nimport { SOCKER_TYPES } from \"@Constants/Socket\";\n\nfunction Type() {\n\tconst { socketStore } = useRootStore();\n\n\tfunction handleTypeChange(e: RadioChangeEvent) {\n\t\tconst { value } = e.target;\n\t\tsocketStore.setSocketType(value);\n\t\tlocalStorage.setItem(LOCALSTORAGE_KEYS.SOCKET_TYPE, value);\n\t}\n\treturn (\n\t\t<Radio.Group onChange={handleTypeChange} value={socketStore.socketType} disabled={socketStore.socketIsConnected}>\n\t\t\t{SOCKER_TYPES.map((s) => (\n\t\t\t\t<Radio.Button value={s} key={s}>\n\t\t\t\t\t{s}\n\t\t\t\t</Radio.Button>\n\t\t\t))}\n\t\t</Radio.Group>\n\t);\n}\n\nexport default observer(Type);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Select } from \"antd\";\n\nimport useRootStore from \"@Store/UseRootStore\";\nimport { LOCALSTORAGE_KEYS } from \"@Constants/index\";\nimport { DATA_FORMATS } from \"@Constants/Socket\";\n\nfunction DataFormat() {\n\tconst { socketStore } = useRootStore();\n\n\tfunction handleChange(val: ISocketStore.DataFormatType) {\n\t\tsocketStore.setDataFormat(val);\n\t\tlocalStorage.setItem(LOCALSTORAGE_KEYS.DATA_FORMAT, val);\n\t}\n\treturn (\n\t\t<Select<ISocketStore.DataFormatType> value={socketStore.dataFormat} style={{ width: 120 }} onChange={handleChange}>\n\t\t\t{DATA_FORMATS.map((d) => (\n\t\t\t\t<Select.Option key={d} value={d}>\n\t\t\t\t\t{d}\n\t\t\t\t</Select.Option>\n\t\t\t))}\n\t\t</Select>\n\t);\n}\n\nexport default observer(DataFormat);\n","import io from \"socket.io-client\";\nimport socketioWildcard from \"socketio-wildcard\";\nimport { message } from \"antd\";\nimport { reaction } from \"mobx\";\n\nimport { socketStore } from \"@Store/index\";\n\nconst patch = socketioWildcard(io.Manager);\n\n/**\n * socket 通信\n *\n * @export\n * @class Socket\n */\nclass Socket {\n\tsocket: SocketIOClient.Socket;\n\n\tsend(event: string, data: any, retry = 0) {\n\t\tif (this.socket && this.socket.connected) {\n\t\t\tthis.socket.emit(event, data);\n\t\t} else if (retry < 3) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.send(data, retry++);\n\t\t\t}, 300);\n\t\t}\n\t}\n\n\topen(url: string) {\n\t\tconst transports = [\"websocket\"];\n\t\tif (!socketStore.notSupportPolling) {\n\t\t\ttransports.unshift(\"polling\");\n\t\t}\n\t\tthis.socket = io.connect(url, {\n\t\t\treconnectionDelay: 1000,\n\t\t\treconnection: true,\n\t\t\treconnectionAttempts: 5,\n\t\t\ttransports,\n\t\t});\n\n\t\tpatch(this.socket);\n\n\t\treaction(\n\t\t\t() => socketStore.socketType,\n\t\t\t(_, __, r) => {\n\t\t\t\tthis.socket.close();\n\t\t\t\tr.dispose();\n\t\t\t}\n\t\t);\n\n\t\tthis.socket.on(\"reconnect\", (attemptNumber) => {\n\t\t\tconst text = `socket reconnect after attempt ${attemptNumber} times !!!`;\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"reconnect\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t});\n\n\t\t// 被断开, 不重连\n\t\tthis.socket.on(\"disconnect\", (reason) => {\n\t\t\tsocketStore.setSocketIsConnected(false);\n\t\t\tconst text = `socket disconnect because: ${reason} !!!`;\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"disconnect\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t});\n\n\t\tthis.socket.on(\"connect_timeout\", (timeout) => {\n\t\t\tconst text = `socket connect_timeout: ${timeout} !!!`;\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"connect_timeout\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t});\n\n\t\t// 连接错误\n\t\tthis.socket.on(\"connect_error\", (err) => {\n\t\t\tconst text = \"socket connect_error !!!\";\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"connect_error\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t\tconsole.warn(err);\n\t\t});\n\n\t\t// 错误捕获\n\t\tthis.socket.on(\"error\", (err) => {\n\t\t\tsocketStore.setSocketIsConnected(false);\n\t\t\tconst text = \"socket error !!!\";\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"error\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t\tconsole.warn(err);\n\t\t});\n\n\t\tthis.socket.on(\"connect\", () => {\n\t\t\tsocketStore.setSocketIsConnected(true);\n\t\t\tconst text = \"socket connected !!!\";\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"connect\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t});\n\n\t\tthis.socket.on(\"ping\", () => {\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"ping\",\n\t\t\t\tfrom: \"browser\",\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t});\n\n\t\tthis.socket.on(\"pong\", () => {\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"pong\",\n\t\t\t\tfrom: \"server\",\n\t\t\t\tdata: null,\n\t\t\t});\n\t\t});\n\n\t\tthis.socket.on(\"*\", (pkg) => {\n\t\t\tconsole.log(\"on all socket callback: \", pkg);\n\t\t\tif (pkg && pkg.data instanceof Array && pkg.data.length > 1) {\n\t\t\t\tconst event = pkg.data[0];\n\t\t\t\tconst data = pkg.data[1];\n\t\t\t\tsocketStore.addMessage({\n\t\t\t\t\tevent,\n\t\t\t\t\tfrom: \"server\",\n\t\t\t\t\tdata,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst socketInstance = new Socket();\n\nfunction canSocketOpen() {\n\treturn !(socketInstance.socket && socketInstance.socket.connected);\n}\n\nexport function socketConnect(url: string) {\n\tif (!canSocketOpen()) {\n\t\treturn message.error(\"Please disconnect the existing instance!!!\");\n\t}\n\tsocketInstance.open(url);\n}\n\nexport function socketDisconnect() {\n\tif (socketInstance.socket && socketInstance.socket.connected) {\n\t\tsocketInstance.socket.close();\n\t}\n}\n\nexport function send(event: string, data: any) {\n\tif (!socketInstance.socket || !socketInstance.socket.connected) {\n\t\treturn message.error(\"Please connect to server!!!\");\n\t}\n\tsocketInstance.send(event, data);\n\tsocketStore.addMessage({\n\t\tevent,\n\t\tfrom: \"browser\",\n\t\tdata,\n\t});\n}\n","import { EventEmitter } from \"eventemitter3\";\nimport { message } from \"antd\";\nimport { reaction } from \"mobx\";\n\nimport { socketStore } from \"@Store/index\";\n\nlet reopenTimer: number = null;\n// 是否主动断开\nlet disconnectInitiative = false;\n\ninterface SocketMsg {\n\tdata: any;\n}\n\n/**\n * socket 通信\n *\n * @export\n * @class Socket\n */\nclass Socket extends EventEmitter {\n\tonopen: () => void;\n\tonmessage: (msg: SocketMsg) => void;\n\tconn: WebSocket = null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.run();\n\t}\n\n\trun() {\n\t\tthis.onopen = () => {\n\t\t\tconst text = \"socket connected !!!\";\n\t\t\tsocketStore.setSocketIsConnected(true);\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"connect\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t};\n\n\t\tthis.onmessage = (msg: SocketMsg) => {\n\t\t\tif (!msg || !msg.data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"message\",\n\t\t\t\tfrom: \"server\",\n\t\t\t\tdata: typeof msg.data === \"object\" ? JSON.stringify(msg.data) : msg.data,\n\t\t\t});\n\t\t};\n\t}\n\n\tsend(data: any, retry = 0) {\n\t\tif (this.conn && this.conn.readyState === this.conn.OPEN) {\n\t\t\tthis.conn.send(typeof data === \"object\" ? JSON.stringify(data) : data);\n\t\t} else if (retry < 3) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.send(data, retry++);\n\t\t\t}, 300);\n\t\t}\n\t}\n\n\topen(url: string) {\n\t\tthis.conn = new WebSocket(url);\n\t\tthis.conn.onclose = (evt) => {\n\t\t\tsocketStore.setSocketIsConnected(false);\n\t\t\tconst text = `socket close: ${typeof evt === \"object\" ? evt.code : \"\"}`;\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"close\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t\tclearTimeout(reopenTimer);\n\t\t\tif (!disconnectInitiative) {\n\t\t\t\treopenTimer = window.setTimeout(() => {\n\t\t\t\t\tthis.open(url);\n\t\t\t\t}, 3000);\n\t\t\t}\n\t\t\tdisconnectInitiative = false;\n\t\t};\n\t\tthis.conn.onerror = (evt) => {\n\t\t\tsocketStore.setSocketIsConnected(false);\n\t\t\tconst text = `socket error: ${typeof evt === \"object\" ? JSON.stringify((evt as any).code) : \"\"}`;\n\t\t\tsocketStore.addMessage({\n\t\t\t\tevent: \"error\",\n\t\t\t\tfrom: \"console\",\n\t\t\t\tdata: text,\n\t\t\t});\n\t\t};\n\n\t\treaction(\n\t\t\t() => socketStore.socketType,\n\t\t\t(_, __, r) => {\n\t\t\t\tclearTimeout(reopenTimer);\n\t\t\t\tr.dispose();\n\t\t\t}\n\t\t);\n\n\t\tif (this.onopen) {\n\t\t\tthis.conn.onopen = this.onopen;\n\t\t}\n\t\tif (this.onmessage) {\n\t\t\tthis.conn.onmessage = this.onmessage;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst socketInstance = new Socket();\n\nfunction canSocketOpen() {\n\treturn !(socketInstance.conn && socketInstance.conn.readyState === socketInstance.conn.OPEN);\n}\n\nexport function socketConnect(url: string) {\n\tif (!canSocketOpen()) {\n\t\treturn message.error(\"Please disconnect the existing instance!!!\");\n\t}\n\tsocketInstance.open(url);\n}\n\nexport function socketDisconnect() {\n\tif (socketInstance.conn && socketInstance.conn.readyState === socketInstance.conn.OPEN) {\n\t\tsocketInstance.conn.close();\n\t}\n\tdisconnectInitiative = true;\n}\n\nexport function send(_, data: any) {\n\tif (!socketInstance.conn && socketInstance.conn.readyState !== socketInstance.conn.OPEN) {\n\t\treturn message.error(\"Please connect to server!!!\");\n\t}\n\tsocketInstance.send(data);\n\tsocketStore.addMessage({\n\t\tevent: null,\n\t\tfrom: \"browser\",\n\t\tdata,\n\t});\n}\n","import { socketStore } from \"@Store/index\";\nimport {\n\tsocketConnect as socketConnectFromSocketIO,\n\tsocketDisconnect as socketDisconnectFromSocketIO,\n\tsend as sendFromSocketIO,\n} from \"./SocketIO\";\nimport {\n\tsocketConnect as socketConnectFromWebsocket,\n\tsocketDisconnect as socketDisconnectFromWebsocket,\n\tsend as sendFromWebsocket,\n} from \"./Websocket\";\n\nexport const socketConnect = (url: string) => {\n\treturn socketStore.isSocketIO ? socketConnectFromSocketIO(url) : socketConnectFromWebsocket(url);\n};\n\nexport const socketDisconnect = () => {\n\treturn socketStore.isSocketIO ? socketDisconnectFromSocketIO() : socketDisconnectFromWebsocket();\n};\n\nexport const send = (event: string, data: any) => {\n\treturn socketStore.isSocketIO ? sendFromSocketIO(event, data) : sendFromWebsocket(event, data);\n};\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { message, Input, Button, Checkbox } from \"antd\";\n\nimport styles from \"./index.scss\";\nimport useRootStore from \"@Store/UseRootStore\";\nimport { socketConnect, socketDisconnect } from \"@Services/Websocket\";\nimport { LOCALSTORAGE_KEYS } from \"@Constants/index\";\n\nfunction Connect() {\n\tconst { socketStore } = useRootStore();\n\n\tconst [url, setUrl] = React.useState(localStorage.getItem(LOCALSTORAGE_KEYS.SOCKET_URL));\n\n\tfunction handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n\t\tconst { value } = e.target;\n\t\tsetUrl(value);\n\t\tlocalStorage.setItem(LOCALSTORAGE_KEYS.SOCKET_URL, value);\n\t}\n\n\tfunction handleConnect() {\n\t\tif (!url) {\n\t\t\tmessage.destroy();\n\t\t\treturn message.error(\"Please input socket url!\");\n\t\t}\n\t\tsocketConnect(url);\n\t\tsocketStore.clearMessages();\n\t}\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.connect}>\n\t\t\t\t<Input className={styles.socketUrlInput} value={url} onChange={handleChange} />\n\t\t\t\t{socketStore.isSocketIO && (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tdisabled={socketStore.socketIsConnected}\n\t\t\t\t\t\tclassName={styles.checkbox}\n\t\t\t\t\t\tchecked={socketStore.notSupportPolling}\n\t\t\t\t\t\tonChange={(e) => socketStore.setNotSupportPolling(e.target.checked)}\n\t\t\t\t\t>\n\t\t\t\t\t\tno polling\n\t\t\t\t\t</Checkbox>\n\t\t\t\t)}\n\t\t\t\t<Button className={styles.btn} type=\"primary\" onClick={handleConnect} disabled={socketStore.socketIsConnected}>\n\t\t\t\t\tconnect\n\t\t\t\t</Button>\n\t\t\t\t<Button className={styles.btn} danger onClick={socketDisconnect} disabled={!socketStore.socketIsConnected}>\n\t\t\t\t\tdisconnect\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<blockquote className={styles.tips}>\n\t\t\t\tprotocol//ip or domain:host (example:\n\t\t\t\t{socketStore.isSocketIO ? \" wss://showcase.jackple.com\" : \" ws://127.0.0.1:3001\"})\n\t\t\t</blockquote>\n\t\t</div>\n\t);\n}\n\nexport default observer(Connect);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Button, AutoComplete, Popconfirm, Modal, Input, message } from \"antd\";\nimport ReactJson from \"react-json-view\";\n\nimport styles from \"./index.scss\";\nimport useRootStore from \"@Store/UseRootStore\";\nimport { LOCALSTORAGE_KEYS } from \"@Constants/index\";\nimport { DATA_FORMATS } from \"@Constants/Socket\";\nimport { send } from \"@Services/Websocket\";\n\nconst localSocketIOEvents = localStorage.getItem(LOCALSTORAGE_KEYS.SOCKET_IO_EVENTS);\nlet initialSocketIOEvents: { value: string }[] = localSocketIOEvents ? JSON.parse(localSocketIOEvents) : [];\nif (initialSocketIOEvents.length > 30) {\n\tinitialSocketIOEvents = initialSocketIOEvents.slice(0, 30);\n}\n\nfunction Send() {\n\tconst { socketStore } = useRootStore();\n\n\tconst [content, setContent] = React.useState(\"\");\n\tconst [textContent, setTextContent] = React.useState(\"\");\n\tconst [jsonContent, setJsonContent] = React.useState<PlainObject>({});\n\tconst [socketIOEvent, setSocketIOEvent] = React.useState(\"\");\n\tconst [socketIOEvents, setSocketIOEvents] = React.useState(initialSocketIOEvents);\n\tconst [modalVisible, setModalVisible] = React.useState(false);\n\n\tconst canSend = React.useMemo(() => {\n\t\tif (socketStore.isSocketIO && !socketIOEvent) {\n\t\t\treturn false;\n\t\t}\n\t\treturn socketStore.socketIsConnected;\n\t}, [socketStore.isSocketIO, socketIOEvent, socketStore.socketIsConnected]);\n\n\tconst sendingContent = React.useMemo(() => (socketStore.dataFormat === DATA_FORMATS[0] ? jsonContent : textContent), [\n\t\tsocketStore.dataFormat,\n\t\tjsonContent,\n\t\ttextContent,\n\t]);\n\n\tfunction toggleModalVisible() {\n\t\tsetModalVisible((visible) => !visible);\n\t}\n\n\tfunction handleOK() {\n\t\ttry {\n\t\t\tsetJsonContent(JSON.parse(content));\n\t\t\ttoggleModalVisible();\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tmessage.destroy();\n\t\t\tmessage.error(\"Please input json string!\");\n\t\t}\n\t}\n\n\tfunction handleSubmit() {\n\t\tif (!socketStore.isSocketIO) {\n\t\t\treturn send(null, sendingContent);\n\t\t} else if (!socketIOEvent) {\n\t\t\tmessage.destroy();\n\t\t\treturn message.error(\"Please input event name!\");\n\t\t}\n\t\tconst hasStoraged = socketIOEvents.some((e) => e.value === socketIOEvent);\n\t\tif (!hasStoraged) {\n\t\t\tconst newSocketIOEvents = [{ value: socketIOEvent }, ...socketIOEvents];\n\t\t\tsetSocketIOEvents(newSocketIOEvents);\n\t\t\tlocalStorage.setItem(LOCALSTORAGE_KEYS.SOCKET_IO_EVENTS, JSON.stringify(newSocketIOEvents));\n\t\t}\n\t\tsend(socketIOEvent, sendingContent);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{socketStore.isSocketIO && (\n\t\t\t\t<AutoComplete\n\t\t\t\t\tclassName={styles.autoComplete}\n\t\t\t\t\toptions={socketIOEvents}\n\t\t\t\t\tplaceholder=\"Input event name\"\n\t\t\t\t\tvalue={socketIOEvent}\n\t\t\t\t\tonChange={(e) => setSocketIOEvent(e as string)}\n\t\t\t\t\tfilterOption={(inputValue, option) => option.value.toUpperCase().includes(inputValue.toUpperCase())}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{socketStore.dataFormat === DATA_FORMATS[0] ? (\n\t\t\t\t<div className={styles.content}>\n\t\t\t\t\t<div className={styles.reset}>\n\t\t\t\t\t\t<Popconfirm placement=\"topLeft\" title=\"Confirm to reset?\" onConfirm={() => setJsonContent({})}>\n\t\t\t\t\t\t\t<Button>Reset</Button>\n\t\t\t\t\t\t</Popconfirm>\n\t\t\t\t\t\t<Button className={styles.btnCover} type=\"primary\" onClick={toggleModalVisible}>\n\t\t\t\t\t\t\tCustom\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\ttitle=\"Custom data\"\n\t\t\t\t\t\t\tstyle={{ top: 20 }}\n\t\t\t\t\t\t\tvisible={modalVisible}\n\t\t\t\t\t\t\tonOk={handleOK}\n\t\t\t\t\t\t\tonCancel={toggleModalVisible}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input.TextArea\n\t\t\t\t\t\t\t\tplaceholder=\"Please input json string\"\n\t\t\t\t\t\t\t\tautoSize={{ minRows: 4, maxRows: 10 }}\n\t\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\t\tonChange={({ target }) => setContent(target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ReactJson\n\t\t\t\t\t\tname={false}\n\t\t\t\t\t\ttheme=\"monokai\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t\tminHeight: 150,\n\t\t\t\t\t\t\tmaxHeight: 500,\n\t\t\t\t\t\t\toverflow: \"auto\",\n\t\t\t\t\t\t\tborderRadius: 3,\n\t\t\t\t\t\t\twordWrap: \"break-word\",\n\t\t\t\t\t\t\twordBreak: \"break-all\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonAdd={({ updated_src: uSrc }) => setJsonContent(uSrc as PlainObject)}\n\t\t\t\t\t\tonEdit={({ updated_src: uSrc }) => setJsonContent(uSrc as PlainObject)}\n\t\t\t\t\t\tonDelete={({ updated_src: uSrc }) => setJsonContent(uSrc as PlainObject)}\n\t\t\t\t\t\tsrc={jsonContent}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<Input.TextArea\n\t\t\t\t\tclassName={styles.textContent}\n\t\t\t\t\tplaceholder=\"Input your sending content\"\n\t\t\t\t\tautoSize={{ minRows: 4, maxRows: 10 }}\n\t\t\t\t\tvalue={textContent}\n\t\t\t\t\tonChange={({ target }) => setTextContent(target.value)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Button block size=\"large\" disabled={!canSend} type=\"primary\" onClick={handleSubmit}>\n\t\t\t\tSend\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n\nexport default observer(Send);\n","import React from \"react\";\n\nimport styles from \"./index.scss\";\nimport Type from \"./Type\";\nimport DataFormat from \"./DataFormat\";\nimport Connect from \"./Connect\";\nimport Send from \"./Send\";\n\nfunction Handler() {\n\treturn (\n\t\t<div className={styles.handler}>\n\t\t\t<div className={styles.head}>\n\t\t\t\t<Type />\n\t\t\t\t<DataFormat />\n\t\t\t</div>\n\t\t\t<Connect />\n\t\t\t<Send />\n\t\t</div>\n\t);\n}\n\nexport default Handler;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport moment from \"moment\";\nimport { Tag } from \"antd\";\n\nimport styles from \"./index.scss\";\n\ninterface IProps {\n\tmessage: ISocketStore.Message;\n\tstyle: React.CSSProperties;\n}\n\nfunction Message({ message, style }: IProps) {\n\tconst time = moment(message.time).format(\"h:mm:ss a\");\n\tconst color = message.from === \"browser\" ? \"#87d068\" : message.from === \"server\" ? \"#2db7f5\" : \"#108ee9\";\n\tconst fromText = message.from === \"browser\" ? \"You\" : message.from === \"server\" ? \"Server\" : \"Console\";\n\tconst content = typeof message.data === \"object\" ? JSON.stringify(message.data) : message.data;\n\n\treturn (\n\t\t<div className={styles.message} style={style}>\n\t\t\t<div className={styles.messageHeader} style={{ marginBottom: !!content ? 5 : 0 }}>\n\t\t\t\t{message.event && <Tag color=\"#f50\">{message.event}</Tag>}\n\t\t\t\t<Tag color={color}>{fromText}</Tag>\n\t\t\t\t<span>{time}</span>\n\t\t\t</div>\n\t\t\t<div className={styles.content}>{content}</div>\n\t\t</div>\n\t);\n}\n\nexport default observer(Message);\n","// extracted by mini-css-extract-plugin\nexport default {\"browse\":\"browse--2YAmBCup\",\"message\":\"message--2_UjkBf7\",\"messageHeader\":\"messageHeader--3-PdTRYr\",\"content\":\"content--2BjHZfQb\"};","import React from \"react\";\nimport { reaction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { AutoSizer } from \"react-virtualized/dist/es/AutoSizer\";\nimport { CellMeasurerCache, CellMeasurer } from \"react-virtualized/dist/es/CellMeasurer\";\nimport { List as VList, ListRowProps } from \"react-virtualized/dist/es/List\";\n\nimport styles from \"./index.scss\";\nimport useRootStore from \"@Store/UseRootStore\";\nimport { useOnMount } from \"@Utils/Hooks\";\nimport Message from \"./Message\";\n\nfunction Browse() {\n\tconst { socketStore } = useRootStore();\n\n\tconst vList = React.useRef<VList>(null);\n\tconst measureCache = new CellMeasurerCache({\n\t\tfixedWidth: true,\n\t\tminHeight: 43,\n\t});\n\n\tfunction handleMessagesChanged(len: number) {\n\t\tif (len === 0) {\n\t\t\treturn measureCache.clearAll();\n\t\t}\n\t\tif (vList.current) {\n\t\t\tvList.current.scrollToRow(len - 1);\n\t\t}\n\t}\n\n\tfunction listenMessagesLen() {\n\t\treturn reaction(() => socketStore.messages.length, handleMessagesChanged);\n\t}\n\n\tuseOnMount(listenMessagesLen);\n\n\tfunction renderItem({ index, key, parent, style }: ListRowProps) {\n\t\tconst item = socketStore.messages[index];\n\t\treturn (\n\t\t\t<CellMeasurer cache={measureCache} columnIndex={0} key={key} parent={parent} rowIndex={index}>\n\t\t\t\t<Message style={style} message={item} />\n\t\t\t</CellMeasurer>\n\t\t);\n\t}\n\tconst rowCount = socketStore.messages.length;\n\treturn (\n\t\t<div className={styles.browse}>\n\t\t\t<AutoSizer>\n\t\t\t\t{({ width, height }) => (\n\t\t\t\t\t<VList\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\theight={height}\n\t\t\t\t\t\tref={vList}\n\t\t\t\t\t\toverscanRowCount={0}\n\t\t\t\t\t\trowCount={rowCount}\n\t\t\t\t\t\tdeferredMeasurementCache={measureCache}\n\t\t\t\t\t\trowHeight={measureCache.rowHeight}\n\t\t\t\t\t\trowRenderer={renderItem}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</AutoSizer>\n\t\t</div>\n\t);\n}\n\nexport default observer(Browse);\n","import React from \"react\";\n\nimport styles from \"./index.scss\";\nimport Handler from \"./Handler\";\nimport Browse from \"./Browse\";\n\nfunction SocketDebugger() {\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Handler />\n\t\t\t<Browse />\n\t\t</div>\n\t);\n}\n\nexport default SocketDebugger;\n","var map = {\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14920;"],"sourceRoot":""}